# DEV DOCKER
version: "2"

services:
  backend:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    command:
      - ./docker/backend/run.sh
    container_name: backend
    env_file:
      - .env
    volumes:
      - ./media:/backend/media:consistent
      - ./static:/backend/static:consistent
    depends_on:
      - database
      - broker
  database:
    restart: unless-stopped
    image: postgres:15
    container_name: database
    volumes:
      - ~/.pg/pg_data/nolabel_hack:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "5432:5432"
  adminer:
    image: adminer
    container_name: adminer
    restart: always
    env_file:
      - .env
    ports:
      - "1000:8080"
    depends_on:
      - database
  nginx:
    restart: unless-stopped
    build:
      dockerfile: ./Dockerfile
      context: ./docker/nginx/
    container_name: nginx
    volumes:
      - ./static:/backend/static:consistent
      - ./media:/backend/media:consistent
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - backend
    env_file:
      - .env
    ports:
      - "${NGINX_EXTERNAL_PORT:-80}:80"
  broker:
    container_name: broker
    image: redis:alpine3.16
    restart: always
    env_file:
      - .env
    ports:
      - "6379:6379"
    volumes:
      - ./redis/data:/root/redis
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
  worker:
    container_name: worker
    restart: always
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    command: celery -A backend worker -l info
    volumes:
      - .:/backend
    env_file:
      - .env
    depends_on:
      - database
      - broker
      - backend
